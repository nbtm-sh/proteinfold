/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/proteinfold Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                       = null
    mode                        = 'alphafold2' // {alphafold2, colabfold, esmfold}
    use_gpu                     = false
    split_fasta                 = false

    // Alphafold2 parameters
    alphafold2_mode             = "standard"
    max_template_date           = "2020-05-14"
    full_dbs                    = false // true full_dbs, false reduced_dbs
    alphafold2_model_preset     = "monomer" // for AF2 {monomer (default), monomer_casp14, monomer_ptm, multimer}
    alphafold2_db               = null

    // Alphafold2 links
    bfd_link                 = null
    small_bfd_link           = null
    alphafold2_params_link   = null
    mgnify_link              = null
    pdb70_link               = null
    pdb_mmcif_link           = null
    pdb_obsolete_link        = null
    uniref30_alphafold2_link = null
    uniref90_link            = null
    pdb_seqres_link          = null
    uniprot_sprot_link       = null
    uniprot_trembl_link      = null

    // Alphafold2 paths
    bfd_path                    = null
    small_bfd_path              = null
    alphafold2_params_path      = null
    mgnify_path                 = null
    pdb70_path                  = null
    pdb_mmcif_path              = null
    uniref30_alphafold2_path    = null
    uniref90_path               = null
    pdb_seqres_path             = null
    uniprot_path                = null
	
	// Boltz links
    boltz_ccd_link           = null
    boltz_model_link         = null
	
	// Boltz parameters
    boltz_ccd_path              = null
    boltz_model_path            = null

    // Colabfold parameters
    colabfold_server            = "webserver"
    colabfold_model_preset      = "alphafold2_ptm" // {'auto', 'alphafold2', 'alphafold2_ptm', 'alphafold2_multimer_v1', 'alphafold2_multimer_v2', 'alphafold2_multimer_v3'}
    num_recycles_colabfold      = 3
    use_amber                   = true
    colabfold_db                = null
    db_load_mode                = 0
    host_url                    = null
    use_templates               = true
    create_colabfold_index      = false

    // Colabfold links
    colabfold_db_link           = null
    uniref30_colabfold_link     = null

    // Colabfold paths
    colabfold_db_path           = null
    uniref30_colabfold_path     = null

    // Esmfold parameters
    esmfold_db                  = null
    esmfold_model_preset        = "monomer"
    num_recycles_esmfold        = 4

    // Esmfold links
    esmfold_3B_v1                           = null
    esm2_t36_3B_UR50D                       = null
    esm2_t36_3B_UR50D_contact_regression    = null

    // Esmfold paths
    esmfold_params_path         = null

    // Foldseek params
    foldseek_search = null
    foldseek_easysearch_arg = null

    // Process skipping options
    skip_multiqc               = false
    skip_visualisation         = false

    // MultiQC options
    multiqc_config              = null
    multiqc_title               = null
    multiqc_logo                = null
    max_multiqc_email_size      = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                       = null
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'

    // Config options
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validate_params            = true

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled         = true
        if (params.use_gpu) {
            docker.runOptions = '--gpus all'
        } else {
            docker.runOptions      = '-u $(id -u):$(id -g)'
        }
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    arm {
        if (params.use_gpu) {
            docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64 --gpus all'
        } else {
            docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
        }
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        if (params.use_gpu) { singularity.runOptions = '--nv' }
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    test                          { includeConfig 'conf/test.config'                                   }
    test_alphafold2_split         { includeConfig 'conf/test_alphafold_split.config'                   }
    test_alphafold2_download      { includeConfig 'conf/test_alphafold_download.config'                }
    test_colabfold_local          { includeConfig 'conf/test_colabfold_local.config'                   }
    test_colabfold_webserver      { includeConfig 'conf/test_colabfold_webserver.config'               }
    test_colabfold_download       { includeConfig 'conf/test_colabfold_download.config'                }
    test_esmfold                  { includeConfig 'conf/test_esmfold.config'                           }
    test_split_fasta              { includeConfig 'conf/test_split_fasta.config'                       }
    test_full                     { includeConfig 'conf/test_full.config'                              }
    test_full_alphafold2_standard { includeConfig 'conf/test_full.config'                              }
    test_full_alphafold2_split    { includeConfig 'conf/test_full_alphafold_split.config'              }
    test_full_alphafold2_multimer { includeConfig 'conf/test_full_alphafold_multimer.config'           }
    test_full_colabfold_local     { includeConfig 'conf/test_full_colabfold_local.config'              }
    test_full_colabfold_webserver { includeConfig 'conf/test_full_colabfold_webserver.config'          }
    test_full_colabfold_multimer  { includeConfig 'conf/test_full_colabfold_webserver_multimer.config' }
    test_full_esmfold             { includeConfig 'conf/test_full_esmfold.config'                      }
    test_full_esmfold_multimer    { includeConfig 'conf/test_full_esmfold_multimer.config'             }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load nf-core/proteinfold custom profiles from different institutions.
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/proteinfold.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = """\
bash

set -e # Exit if a tool returns a non-zero status/exit code
set -u # Treat unset variables and parameters as an error
set -o pipefail # Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
set -C # No clobber - prevent output redirection from overwriting files.
"""

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/proteinfold'
    author          = """Athanasios Baltzis, Jose Espinosa-Carrasco, Harshil Patel"""
    homePage        = 'https://github.com/nf-core/proteinfold'
    description     = """Protein 3D structure prediction pipeline"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.04.2'
    version         = '1.2.0dev'
    doi             = '10.5281/zenodo.7629996'
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    help {
        enabled = true
        command = "nextflow run $manifest.name -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
-\033[2m----------------------------------------------------\033[0m-
                                        \033[0;32m,--.\033[0;30m/\033[0;32m,-.\033[0m
\033[0;34m        ___     __   __   __   ___     \033[0;32m/,-._.--~\'\033[0m
\033[0;34m  |\\ | |__  __ /  ` /  \\ |__) |__         \033[0;33m}  {\033[0m
\033[0;34m  | \\| |       \\__, \\__/ |  \\ |___     \033[0;32m\\`-._,-`-,\033[0m
                                        \033[0;32m`._,._,\'\033[0m
\033[0;35m  ${manifest.name} ${manifest.version}\033[0m
-\033[2m----------------------------------------------------\033[0m-
"""
        afterText = """${manifest.doi ? "* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "  https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* The nf-core framework
    https://doi.org/10.1038/s41587-020-0439-x

* Software dependencies
    https://github.com/${manifest.name}/blob/master/CITATIONS.md
"""
    }
    summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Load modules config for pipeline specific modes
if (params.mode.toLowerCase().split(",").contains("alphafold2")) {
    includeConfig 'conf/modules_alphafold2.config'
}
if (params.mode.toLowerCase().split(",").contains("colabfold")) {
    includeConfig 'conf/modules_colabfold.config'
}
if (params.mode.toLowerCase().split(",").contains("esmfold")) {
    includeConfig 'conf/modules_esmfold.config'
}

// Load links to DBs and parameters
includeConfig 'conf/dbs.config'
